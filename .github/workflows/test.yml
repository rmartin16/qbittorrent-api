name: Test qBittorrent

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      qbittorrent-version:
        required: true
        type: string
      qbittorrent-host:
        required: true
        type: string
      qbittorrent-username:
        required: true
        type: string
      qbittorrent-password:
        required: true
        type: string
      is-qbt-dev:
        required: true
        type: boolean

env:
  FORCE_COLOR: 1

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    continue-on-error: true
    env:
      QBT_VER: ${{ inputs.qbittorrent-version }}
      QBITTORRENTAPI_HOST: ${{ inputs.qbittorrent-host }}
      QBITTORRENTAPI_USERNAME: ${{ inputs.qbittorrent-username }}
      QBITTORRENTAPI_PASSWORD: ${{ inputs.qbittorrent-password }}
      IS_QBT_DEV: ${{ inputs.is-qbt-dev }}
      DOCKER_QBT_IMAGE_NAME: ghcr.io/rmartin16/qbittorrent-nox
      DOCKER_QBT_IMAGE_TAG: ${{ inputs.qbittorrent-version }}-debug
      DOCKER_ARGS: --name qbt-tox-testing --detach --publish 8080:8080 --volume ${{ github.workspace }}/tests/_resources:/tmp/_resources

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4.1.7

      - name: Get packages
        uses: actions/download-artifact@v4.1.7
        with:
          name: Packages
          path: ./dist

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ inputs.python-version }}
          cache: pip
          check-latest: true
          cache-dependency-path: ${{ github.workspace }}/setup.cfg

      - name: Start qBittorrent ${{ inputs.qbittorrent-version }}
        id: start-qbittorrent
        run: docker run ${DOCKER_ARGS} ${DOCKER_QBT_IMAGE_NAME}:${DOCKER_QBT_IMAGE_TAG}

      - name: qBittorrent Build Commits
        run: docker exec qbt-tox-testing /bin/sh -c "tail -n+1 /build_commit.*"

      - name: Install
        run: |
          python -m pip install --upgrade pip setuptools
          # force installing py03 packages not explicitly compatible with the version of python
          PYO3_USE_ABI3_FORWARD_COMPATIBILITY=1 python -m pip install $(ls dist/qbittorrent_api-*.whl)[dev]

      - name: Test
        run: tox -e py-ci --installpkg dist/qbittorrent_api-*.whl

      - name: qBittorrent Log
        if: (steps.start-qbittorrent.outcome == 'success') && (success() || failure())
        run: docker logs qbt-tox-testing

      - name: Store coverage data
        if: success() || failure()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: coverage-data-${{ inputs.python-version }}-${{ inputs.qbittorrent-version }}
          path: ./.coverage.*

      - name: Send mail
        if: failure() && github.event_name != 'pull_request'
        uses: dawidd6/action-send-mail@v3.12.0
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: ${{ github.job }} job of ${{ github.repository }} failed
          body: |
            ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} failed.
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_ADDRESS }}  # comma-separated string
          from: ${{ secrets.EMAIL_USERNAME }}
